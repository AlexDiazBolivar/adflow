C        Generated by TAPENADE     (INRIA, Tropics team)
C  Tapenade 2.2.4 (r2308) - 03/04/2008 10:03
C  
C  Differentiation of delq3dm in forward (tangent) mode:
C   variations  of output variables: dfacei dfacej dfacek
C   with respect to input variables: dfacei dfacej dfacek xyz
      SUBROUTINE DELQ3DM_D(il, jl, kl, i1, i2, j1, j2, k1, k2, xyz0, s0
     +                     , dfacei, dfaceid, dfacej, dfacejd, dfacek, 
     +                     dfacekd, xyz, xyzd)
      IMPLICIT NONE
C
C
C
C     ******************************************************************
C     *   DELQ3DM performs stage 1 of the WARPQ3DM 3-space surface     *
C     *   grid perturbation in a form which is reusable by WARP-BLK    *
C     *   It returns face perturbations rather than perturbed face     *
C     *   coordinates.  The three cases of a block face are handled    *
C     *   here by three similar code sections.  Special handling of    *
C     *   fixed corners is avoided to keep the bulk down.              *
C     *                                                                *
C     *   11/29/95  D.Saunders  Adaptation of DELQ3D for specialized   *
C     *                         WARP-BLK and WARPQ3DM used by          *
C     *                         FLO107-MB.                             *
C     *   04/04/96      "       DELQ3DM does only stage 1 now.         *
C     *                                                                *
C     *   David Saunders/James Reuther, NASA Ames Research Center, CA. *
C     ******************************************************************
C
C Take out when all compilers have a switch
C
C     Arguments.
C
C I Grid array dimensions.
      INTEGER il, jl, kl
C I Define active face,
C   one pair being equal.
      INTEGER i1, i2, j1, j2, k1, k2
      REAL*8 xyz0
C I Base face coordinates in
C   appropriate places
      DIMENSION xyz0(3, 0:il+1, 0:jl+1, 0:kl+1)
      REAL*8 s0
C I Base normalized arc-lengths
      DIMENSION s0(3, 0:il+1, 0:jl+1, 0:kl+1)
      REAL*8 dfacei
C O Reqd. face perturbations:
      DIMENSION dfacei(3, jl, kl)
      REAL*8 dfaceid
      DIMENSION dfaceid(3, jl, kl)
      REAL*8 dfacej
C   DFACEI(1:3,1:JL,1:KL) =
      DIMENSION dfacej(3, il, kl)
      REAL*8 dfacejd
      DIMENSION dfacejd(3, il, kl)
      REAL*8 dfacek
C   dX, dY, dZ for an I face, etc.
      DIMENSION dfacek(3, il, jl)
      REAL*8 dfacekd
      DIMENSION dfacekd(3, il, jl)
      REAL*8 xyz
C I Grid coordinates: new edges
C   of a face input; unchanged
C   on output
      DIMENSION xyz(3, 0:il+1, 0:jl+1, 0:kl+1)
      REAL*8 xyzd
      DIMENSION xyzd(3, 0:il+1, 0:jl+1, 0:kl+1)
      REAL*8 eps
      REAL*8 one
      PARAMETER (eps=1.e-14, one=1.e+0)
C EPS safeguards a divide by zero -
C presumably only if result is zero.
C     Local variables.
C
      INTEGER i, j, k
      REAL*8 wtk2
      REAL*8 wtk1
      REAL*8 wtj2
      REAL*8 wtj1
      REAL*8 delj
      REAL*8 deljd
      REAL*8 delk
      REAL*8 delkd
      REAL*8 wti2
      REAL*8 wti1
      REAL*8 deli
      REAL*8 delid
      REAL*8 abs30
      REAL*8 abs18d
      REAL*8 abs26d
      REAL*8 abs34d
      REAL*8 x6d
      REAL*8 abs29d
      REAL*8 abs1d
      REAL*8 x9d
      REAL*8 max2d
      REAL*8 abs11d
      REAL*8 abs4d
      REAL*8 max5d
      REAL*8 x9
      REAL*8 abs29
      INTRINSIC MAX
      REAL*8 x8
      REAL*8 abs28
      REAL*8 x7
      REAL*8 abs27
      REAL*8 abs14d
      REAL*8 abs7d
      REAL*8 x6
      REAL*8 abs26
      REAL*8 abs22d
      REAL*8 x5
      REAL*8 abs25
      REAL*8 abs30d
      REAL*8 x4
      REAL*8 abs24
      REAL*8 max8d
      REAL*8 x3
      REAL*8 abs23
      INTRINSIC ABS
      REAL*8 x2
      REAL*8 abs22
      REAL*8 x2d
      REAL*8 x1
      REAL*8 abs21
      REAL*8 abs20
      REAL*8 abs17d
      REAL*8 abs25d
      REAL*8 abs33d
      REAL*8 x5d
      REAL*8 abs28d
      REAL*8 abs36d
      REAL*8 x8d
      REAL*8 max1d
      REAL*8 abs10d
      REAL*8 abs3d
      REAL*8 max4d
      REAL*8 abs19
      REAL*8 abs18
      REAL*8 abs17
      REAL*8 abs13d
      REAL*8 abs6d
      REAL*8 abs16
      REAL*8 abs21d
      REAL*8 abs15
      REAL*8 abs14
      REAL*8 max7d
      REAL*8 abs13
      REAL*8 abs12
      REAL*8 x1d
      REAL*8 abs11
      REAL*8 abs10
      REAL*8 abs16d
      REAL*8 abs9d
      REAL*8 abs24d
      REAL*8 abs32d
      REAL*8 x4d
      REAL*8 abs19d
      REAL*8 abs27d
      REAL*8 abs35d
      REAL*8 abs9
      REAL*8 abs8
      REAL*8 abs7
      REAL*8 x7d
      REAL*8 abs6
      REAL*8 abs5
      REAL*8 abs4
      REAL*8 abs3
      REAL*8 abs2
      REAL*8 abs2d
      REAL*8 abs1
      REAL*8 max3d
      REAL*8 max9
      REAL*8 abs12d
      REAL*8 abs5d
      REAL*8 max8
      REAL*8 abs20d
      REAL*8 max7
      REAL*8 max6
      REAL*8 max6d
      REAL*8 max5
      REAL*8 max4
      REAL*8 max3
      REAL*8 max2
      REAL*8 abs15d
      REAL*8 abs8d
      REAL*8 max1
      REAL*8 abs36
      REAL*8 abs23d
      REAL*8 abs35
      REAL*8 abs31d
      REAL*8 abs34
      REAL*8 max9d
      REAL*8 abs33
      REAL*8 abs32
      REAL*8 x3d
      REAL*8 abs31
C     REAL      DELI, DELJ, DELK, WTI1, WTI2, WTJ1, WTJ2, WTK1, WTK2
C
C
C     Execution.
C     ----------
C
C
      IF (i1 .EQ. i2) THEN
C
C        I plane case:
C        -------------
C
        i = i1
C
C        Set up the corner perturbations:
C
        DO k=1,kl,kl-1
          DO j=1,jl,jl-1
            dfaceid(1, j, k) = xyzd(1, i, j, k)
            dfacei(1, j, k) = xyz(1, i, j, k) - xyz0(1, i, j, k)
            dfaceid(2, j, k) = xyzd(2, i, j, k)
            dfacei(2, j, k) = xyz(2, i, j, k) - xyz0(2, i, j, k)
            dfaceid(3, j, k) = xyzd(3, i, j, k)
            dfacei(3, j, k) = xyz(3, i, j, k) - xyz0(3, i, j, k)
          ENDDO
        ENDDO
C
C        Set up intermediate edge perturbations corresponding to the
C        final corners but otherwise derived from the original edges.
C
        DO j=1,jl,jl-1
          DO k=2,kl-1
            wtk2 = s0(3, i, j, k)
            wtk1 = one - wtk2
            dfaceid(1, j, k) = wtk1*dfaceid(1, j, 1) + wtk2*dfaceid(1, j
     +        , kl)
            dfacei(1, j, k) = wtk1*dfacei(1, j, 1) + wtk2*dfacei(1, j, 
     +        kl)
            dfaceid(2, j, k) = wtk1*dfaceid(2, j, 1) + wtk2*dfaceid(2, j
     +        , kl)
            dfacei(2, j, k) = wtk1*dfacei(2, j, 1) + wtk2*dfacei(2, j, 
     +        kl)
            dfaceid(3, j, k) = wtk1*dfaceid(3, j, 1) + wtk2*dfaceid(3, j
     +        , kl)
            dfacei(3, j, k) = wtk1*dfacei(3, j, 1) + wtk2*dfacei(3, j, 
     +        kl)
          ENDDO
        ENDDO
C
        DO k=1,kl,kl-1
          DO j=2,jl-1
            wtj2 = s0(2, i, j, k)
            wtj1 = one - wtj2
            dfaceid(1, j, k) = wtj1*dfaceid(1, 1, k) + wtj2*dfaceid(1, 
     +        jl, k)
            dfacei(1, j, k) = wtj1*dfacei(1, 1, k) + wtj2*dfacei(1, jl, 
     +        k)
            dfaceid(2, j, k) = wtj1*dfaceid(2, 1, k) + wtj2*dfaceid(2, 
     +        jl, k)
            dfacei(2, j, k) = wtj1*dfacei(2, 1, k) + wtj2*dfacei(2, jl, 
     +        k)
            dfaceid(3, j, k) = wtj1*dfaceid(3, 1, k) + wtj2*dfaceid(3, 
     +        jl, k)
            dfacei(3, j, k) = wtj1*dfacei(3, 1, k) + wtj2*dfacei(3, jl, 
     +        k)
          ENDDO
        ENDDO
C
C        Interpolate the intermediate perturbations of interior points.
C        The contributions from each pair of edges are not independent.
C
        DO k=2,kl-1
          DO j=2,jl-1
            wtj2 = s0(2, i, j, k)
            wtj1 = one - wtj2
            wtk2 = s0(3, i, j, k)
            wtk1 = one - wtk2
C
            deljd = wtj1*dfaceid(1, 1, k) + wtj2*dfaceid(1, jl, k)
            delj = wtj1*dfacei(1, 1, k) + wtj2*dfacei(1, jl, k)
            delkd = wtk1*dfaceid(1, j, 1) + wtk2*dfaceid(1, j, kl)
            delk = wtk1*dfacei(1, j, 1) + wtk2*dfacei(1, j, kl)
            IF (delj .GE. 0.) THEN
              abs1d = deljd
              abs1 = delj
            ELSE
              abs1d = -deljd
              abs1 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs10d = delkd
              abs10 = delk
            ELSE
              abs10d = -delkd
              abs10 = -delk
            END IF
            IF (delj .GE. 0.) THEN
              abs19d = deljd
              abs19 = delj
            ELSE
              abs19d = -deljd
              abs19 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs28d = delkd
              abs28 = delk
            ELSE
              abs28d = -delkd
              abs28 = -delk
            END IF
            x1d = abs19d + abs28d
            x1 = abs19 + abs28
            IF (x1 .LT. eps) THEN
              max1 = eps
              max1d = 0.0_8
            ELSE
              max1d = x1d
              max1 = x1
            END IF
C
            dfaceid(1, j, k) = ((abs1d*delj+abs1*deljd+abs10d*delk+abs10
     +        *delkd)*max1-(abs1*delj+abs10*delk)*max1d)/max1**2
            dfacei(1, j, k) = (abs1*delj+abs10*delk)/max1
C
            deljd = wtj1*dfaceid(2, 1, k) + wtj2*dfaceid(2, jl, k)
            delj = wtj1*dfacei(2, 1, k) + wtj2*dfacei(2, jl, k)
            delkd = wtk1*dfaceid(2, j, 1) + wtk2*dfaceid(2, j, kl)
            delk = wtk1*dfacei(2, j, 1) + wtk2*dfacei(2, j, kl)
            IF (delj .GE. 0.) THEN
              abs2d = deljd
              abs2 = delj
            ELSE
              abs2d = -deljd
              abs2 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs11d = delkd
              abs11 = delk
            ELSE
              abs11d = -delkd
              abs11 = -delk
            END IF
            IF (delj .GE. 0.) THEN
              abs20d = deljd
              abs20 = delj
            ELSE
              abs20d = -deljd
              abs20 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs29d = delkd
              abs29 = delk
            ELSE
              abs29d = -delkd
              abs29 = -delk
            END IF
            x2d = abs20d + abs29d
            x2 = abs20 + abs29
            IF (x2 .LT. eps) THEN
              max2 = eps
              max2d = 0.0_8
            ELSE
              max2d = x2d
              max2 = x2
            END IF
C
            dfaceid(2, j, k) = ((abs2d*delj+abs2*deljd+abs11d*delk+abs11
     +        *delkd)*max2-(abs2*delj+abs11*delk)*max2d)/max2**2
            dfacei(2, j, k) = (abs2*delj+abs11*delk)/max2
C
            deljd = wtj1*dfaceid(3, 1, k) + wtj2*dfaceid(3, jl, k)
            delj = wtj1*dfacei(3, 1, k) + wtj2*dfacei(3, jl, k)
            delkd = wtk1*dfaceid(3, j, 1) + wtk2*dfaceid(3, j, kl)
            delk = wtk1*dfacei(3, j, 1) + wtk2*dfacei(3, j, kl)
            IF (delj .GE. 0.) THEN
              abs3d = deljd
              abs3 = delj
            ELSE
              abs3d = -deljd
              abs3 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs12d = delkd
              abs12 = delk
            ELSE
              abs12d = -delkd
              abs12 = -delk
            END IF
            IF (delj .GE. 0.) THEN
              abs21d = deljd
              abs21 = delj
            ELSE
              abs21d = -deljd
              abs21 = -delj
            END IF
            IF (delk .GE. 0.) THEN
              abs30d = delkd
              abs30 = delk
            ELSE
              abs30d = -delkd
              abs30 = -delk
            END IF
            x3d = abs21d + abs30d
            x3 = abs21 + abs30
            IF (x3 .LT. eps) THEN
              max3 = eps
              max3d = 0.0_8
            ELSE
              max3d = x3d
              max3 = x3
            END IF
C
            dfaceid(3, j, k) = ((abs3d*delj+abs3*deljd+abs12d*delk+abs12
     +        *delkd)*max3-(abs3*delj+abs12*delk)*max3d)/max3**2
            dfacei(3, j, k) = (abs3*delj+abs12*delk)/max3
          ENDDO
        ENDDO
      ELSE IF (j1 .EQ. j2) THEN
C
C
C        J plane case:
C        -------------
C
        j = j1
C
C        Corner perturbations:
C
        DO k=1,kl,kl-1
          DO i=1,il,il-1
            dfacejd(1, i, k) = xyzd(1, i, j, k)
            dfacej(1, i, k) = xyz(1, i, j, k) - xyz0(1, i, j, k)
            dfacejd(2, i, k) = xyzd(2, i, j, k)
            dfacej(2, i, k) = xyz(2, i, j, k) - xyz0(2, i, j, k)
            dfacejd(3, i, k) = xyzd(3, i, j, k)
            dfacej(3, i, k) = xyz(3, i, j, k) - xyz0(3, i, j, k)
          ENDDO
        ENDDO
C
C        Intermediate edge perturbations:
C
        DO i=1,il,il-1
          DO k=2,kl-1
            wtk2 = s0(3, i, j, k)
            wtk1 = one - wtk2
            dfacejd(1, i, k) = wtk1*dfacejd(1, i, 1) + wtk2*dfacejd(1, i
     +        , kl)
            dfacej(1, i, k) = wtk1*dfacej(1, i, 1) + wtk2*dfacej(1, i, 
     +        kl)
            dfacejd(2, i, k) = wtk1*dfacejd(2, i, 1) + wtk2*dfacejd(2, i
     +        , kl)
            dfacej(2, i, k) = wtk1*dfacej(2, i, 1) + wtk2*dfacej(2, i, 
     +        kl)
            dfacejd(3, i, k) = wtk1*dfacejd(3, i, 1) + wtk2*dfacejd(3, i
     +        , kl)
            dfacej(3, i, k) = wtk1*dfacej(3, i, 1) + wtk2*dfacej(3, i, 
     +        kl)
          ENDDO
        ENDDO
C
        DO k=1,kl,kl-1
          DO i=2,il-1
            wti2 = s0(1, i, j, k)
            wti1 = one - wti2
            dfacejd(1, i, k) = wti1*dfacejd(1, 1, k) + wti2*dfacejd(1, 
     +        il, k)
            dfacej(1, i, k) = wti1*dfacej(1, 1, k) + wti2*dfacej(1, il, 
     +        k)
            dfacejd(2, i, k) = wti1*dfacejd(2, 1, k) + wti2*dfacejd(2, 
     +        il, k)
            dfacej(2, i, k) = wti1*dfacej(2, 1, k) + wti2*dfacej(2, il, 
     +        k)
            dfacejd(3, i, k) = wti1*dfacejd(3, 1, k) + wti2*dfacejd(3, 
     +        il, k)
            dfacej(3, i, k) = wti1*dfacej(3, 1, k) + wti2*dfacej(3, il, 
     +        k)
          ENDDO
        ENDDO
C
C        Intermediate perturbations of interior points:
C
        DO k=2,kl-1
          DO i=2,il-1
            wti2 = s0(1, i, j, k)
            wti1 = one - wti2
            wtk2 = s0(3, i, j, k)
            wtk1 = one - wtk2
C
            delid = wti1*dfacejd(1, 1, k) + wti2*dfacejd(1, il, k)
            deli = wti1*dfacej(1, 1, k) + wti2*dfacej(1, il, k)
            delkd = wtk1*dfacejd(1, i, 1) + wtk2*dfacejd(1, i, kl)
            delk = wtk1*dfacej(1, i, 1) + wtk2*dfacej(1, i, kl)
            IF (deli .GE. 0.) THEN
              abs4d = delid
              abs4 = deli
            ELSE
              abs4d = -delid
              abs4 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs13d = delkd
              abs13 = delk
            ELSE
              abs13d = -delkd
              abs13 = -delk
            END IF
            IF (deli .GE. 0.) THEN
              abs22d = delid
              abs22 = deli
            ELSE
              abs22d = -delid
              abs22 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs31d = delkd
              abs31 = delk
            ELSE
              abs31d = -delkd
              abs31 = -delk
            END IF
            x4d = abs22d + abs31d
            x4 = abs22 + abs31
            IF (x4 .LT. eps) THEN
              max4 = eps
              max4d = 0.0_8
            ELSE
              max4d = x4d
              max4 = x4
            END IF
C
            dfacejd(1, i, k) = ((abs4d*deli+abs4*delid+abs13d*delk+abs13
     +        *delkd)*max4-(abs4*deli+abs13*delk)*max4d)/max4**2
            dfacej(1, i, k) = (abs4*deli+abs13*delk)/max4
C
            delid = wti1*dfacejd(2, 1, k) + wti2*dfacejd(2, il, k)
            deli = wti1*dfacej(2, 1, k) + wti2*dfacej(2, il, k)
            delkd = wtk1*dfacejd(2, i, 1) + wtk2*dfacejd(2, i, kl)
            delk = wtk1*dfacej(2, i, 1) + wtk2*dfacej(2, i, kl)
            IF (deli .GE. 0.) THEN
              abs5d = delid
              abs5 = deli
            ELSE
              abs5d = -delid
              abs5 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs14d = delkd
              abs14 = delk
            ELSE
              abs14d = -delkd
              abs14 = -delk
            END IF
            IF (deli .GE. 0.) THEN
              abs23d = delid
              abs23 = deli
            ELSE
              abs23d = -delid
              abs23 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs32d = delkd
              abs32 = delk
            ELSE
              abs32d = -delkd
              abs32 = -delk
            END IF
            x5d = abs23d + abs32d
            x5 = abs23 + abs32
            IF (x5 .LT. eps) THEN
              max5 = eps
              max5d = 0.0_8
            ELSE
              max5d = x5d
              max5 = x5
            END IF
C
            dfacejd(2, i, k) = ((abs5d*deli+abs5*delid+abs14d*delk+abs14
     +        *delkd)*max5-(abs5*deli+abs14*delk)*max5d)/max5**2
            dfacej(2, i, k) = (abs5*deli+abs14*delk)/max5
C
            delid = wti1*dfacejd(3, 1, k) + wti2*dfacejd(3, il, k)
            deli = wti1*dfacej(3, 1, k) + wti2*dfacej(3, il, k)
            delkd = wtk1*dfacejd(3, i, 1) + wtk2*dfacejd(3, i, kl)
            delk = wtk1*dfacej(3, i, 1) + wtk2*dfacej(3, i, kl)
            IF (deli .GE. 0.) THEN
              abs6d = delid
              abs6 = deli
            ELSE
              abs6d = -delid
              abs6 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs15d = delkd
              abs15 = delk
            ELSE
              abs15d = -delkd
              abs15 = -delk
            END IF
            IF (deli .GE. 0.) THEN
              abs24d = delid
              abs24 = deli
            ELSE
              abs24d = -delid
              abs24 = -deli
            END IF
            IF (delk .GE. 0.) THEN
              abs33d = delkd
              abs33 = delk
            ELSE
              abs33d = -delkd
              abs33 = -delk
            END IF
            x6d = abs24d + abs33d
            x6 = abs24 + abs33
            IF (x6 .LT. eps) THEN
              max6 = eps
              max6d = 0.0_8
            ELSE
              max6d = x6d
              max6 = x6
            END IF
C
            dfacejd(3, i, k) = ((abs6d*deli+abs6*delid+abs15d*delk+abs15
     +        *delkd)*max6-(abs6*deli+abs15*delk)*max6d)/max6**2
            dfacej(3, i, k) = (abs6*deli+abs15*delk)/max6
          ENDDO
        ENDDO
      ELSE IF (k1 .EQ. k2) THEN
C
C
C        K plane case:
C        -------------
C
        k = k1
C
C        Corner perturbations:
C
        DO j=1,jl,jl-1
          DO i=1,il,il-1
            dfacekd(1, i, j) = xyzd(1, i, j, k)
            dfacek(1, i, j) = xyz(1, i, j, k) - xyz0(1, i, j, k)
            dfacekd(2, i, j) = xyzd(2, i, j, k)
            dfacek(2, i, j) = xyz(2, i, j, k) - xyz0(2, i, j, k)
            dfacekd(3, i, j) = xyzd(3, i, j, k)
            dfacek(3, i, j) = xyz(3, i, j, k) - xyz0(3, i, j, k)
          ENDDO
        ENDDO
C
C        Intermediate edge perturbations:
C
        DO i=1,il,il-1
          DO j=2,jl-1
            wtj2 = s0(2, i, j, k)
            wtj1 = one - wtj2
            dfacekd(1, i, j) = wtj1*dfacekd(1, i, 1) + wtj2*dfacekd(1, i
     +        , jl)
            dfacek(1, i, j) = wtj1*dfacek(1, i, 1) + wtj2*dfacek(1, i, 
     +        jl)
            dfacekd(2, i, j) = wtj1*dfacekd(2, i, 1) + wtj2*dfacekd(2, i
     +        , jl)
            dfacek(2, i, j) = wtj1*dfacek(2, i, 1) + wtj2*dfacek(2, i, 
     +        jl)
            dfacekd(3, i, j) = wtj1*dfacekd(3, i, 1) + wtj2*dfacekd(3, i
     +        , jl)
            dfacek(3, i, j) = wtj1*dfacek(3, i, 1) + wtj2*dfacek(3, i, 
     +        jl)
          ENDDO
        ENDDO
C
        DO j=1,jl,jl-1
          DO i=2,il-1
            wti2 = s0(1, i, j, k)
            wti1 = one - wti2
            dfacekd(1, i, j) = wti1*dfacekd(1, 1, j) + wti2*dfacekd(1, 
     +        il, j)
            dfacek(1, i, j) = wti1*dfacek(1, 1, j) + wti2*dfacek(1, il, 
     +        j)
            dfacekd(2, i, j) = wti1*dfacekd(2, 1, j) + wti2*dfacekd(2, 
     +        il, j)
            dfacek(2, i, j) = wti1*dfacek(2, 1, j) + wti2*dfacek(2, il, 
     +        j)
            dfacekd(3, i, j) = wti1*dfacekd(3, 1, j) + wti2*dfacekd(3, 
     +        il, j)
            dfacek(3, i, j) = wti1*dfacek(3, 1, j) + wti2*dfacek(3, il, 
     +        j)
          ENDDO
        ENDDO
C
C        Intermediate perturbations of interior points:
C
        DO j=2,jl-1
          DO i=2,il-1
            wti2 = s0(1, i, j, k)
            wti1 = one - wti2
            wtj2 = s0(2, i, j, k)
            wtj1 = one - wtj2
C
            delid = wti1*dfacekd(1, 1, j) + wti2*dfacekd(1, il, j)
            deli = wti1*dfacek(1, 1, j) + wti2*dfacek(1, il, j)
            deljd = wtj1*dfacekd(1, i, 1) + wtj2*dfacekd(1, i, jl)
            delj = wtj1*dfacek(1, i, 1) + wtj2*dfacek(1, i, jl)
            IF (deli .GE. 0.) THEN
              abs7d = delid
              abs7 = deli
            ELSE
              abs7d = -delid
              abs7 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs16d = deljd
              abs16 = delj
            ELSE
              abs16d = -deljd
              abs16 = -delj
            END IF
            IF (deli .GE. 0.) THEN
              abs25d = delid
              abs25 = deli
            ELSE
              abs25d = -delid
              abs25 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs34d = deljd
              abs34 = delj
            ELSE
              abs34d = -deljd
              abs34 = -delj
            END IF
            x7d = abs25d + abs34d
            x7 = abs25 + abs34
            IF (x7 .LT. eps) THEN
              max7 = eps
              max7d = 0.0_8
            ELSE
              max7d = x7d
              max7 = x7
            END IF
C
            dfacekd(1, i, j) = ((abs7d*deli+abs7*delid+abs16d*delj+abs16
     +        *deljd)*max7-(abs7*deli+abs16*delj)*max7d)/max7**2
            dfacek(1, i, j) = (abs7*deli+abs16*delj)/max7
C
            delid = wti1*dfacekd(2, 1, j) + wti2*dfacekd(2, il, j)
            deli = wti1*dfacek(2, 1, j) + wti2*dfacek(2, il, j)
            deljd = wtj1*dfacekd(2, i, 1) + wtj2*dfacekd(2, i, jl)
            delj = wtj1*dfacek(2, i, 1) + wtj2*dfacek(2, i, jl)
            IF (deli .GE. 0.) THEN
              abs8d = delid
              abs8 = deli
            ELSE
              abs8d = -delid
              abs8 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs17d = deljd
              abs17 = delj
            ELSE
              abs17d = -deljd
              abs17 = -delj
            END IF
            IF (deli .GE. 0.) THEN
              abs26d = delid
              abs26 = deli
            ELSE
              abs26d = -delid
              abs26 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs35d = deljd
              abs35 = delj
            ELSE
              abs35d = -deljd
              abs35 = -delj
            END IF
            x8d = abs26d + abs35d
            x8 = abs26 + abs35
            IF (x8 .LT. eps) THEN
              max8 = eps
              max8d = 0.0_8
            ELSE
              max8d = x8d
              max8 = x8
            END IF
C
            dfacekd(2, i, j) = ((abs8d*deli+abs8*delid+abs17d*delj+abs17
     +        *deljd)*max8-(abs8*deli+abs17*delj)*max8d)/max8**2
            dfacek(2, i, j) = (abs8*deli+abs17*delj)/max8
C
            delid = wti1*dfacekd(3, 1, j) + wti2*dfacekd(3, il, j)
            deli = wti1*dfacek(3, 1, j) + wti2*dfacek(3, il, j)
            deljd = wtj1*dfacekd(3, i, 1) + wtj2*dfacekd(3, i, jl)
            delj = wtj1*dfacek(3, i, 1) + wtj2*dfacek(3, i, jl)
            IF (deli .GE. 0.) THEN
              abs9d = delid
              abs9 = deli
            ELSE
              abs9d = -delid
              abs9 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs18d = deljd
              abs18 = delj
            ELSE
              abs18d = -deljd
              abs18 = -delj
            END IF
            IF (deli .GE. 0.) THEN
              abs27d = delid
              abs27 = deli
            ELSE
              abs27d = -delid
              abs27 = -deli
            END IF
            IF (delj .GE. 0.) THEN
              abs36d = deljd
              abs36 = delj
            ELSE
              abs36d = -deljd
              abs36 = -delj
            END IF
            x9d = abs27d + abs36d
            x9 = abs27 + abs36
            IF (x9 .LT. eps) THEN
              max9 = eps
              max9d = 0.0_8
            ELSE
              max9d = x9d
              max9 = x9
            END IF
C
            dfacekd(3, i, j) = ((abs9d*deli+abs9*delid+abs18d*delj+abs18
     +        *deljd)*max9-(abs9*deli+abs18*delj)*max9d)/max9**2
            dfacek(3, i, j) = (abs9*deli+abs18*delj)/max9
          ENDDO
        ENDDO
      END IF
      END
